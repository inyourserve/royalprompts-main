name: üöÄ Backend Simple Deploy

on:
  push:
    branches: [ main ]
    paths:
      - 'backend/**'
      - '.github/workflows/backend-simple-deploy.yml'
  workflow_dispatch:

jobs:
  # Deploy to DigitalOcean
  deploy:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
    - name: üì• Checkout code
      uses: actions/checkout@v4

    - name: üöÄ Deploy to DigitalOcean
      uses: appleboy/ssh-action@v1.0.0
      with:
        host: ${{ secrets.DROPLET_HOST }}
        username: ${{ secrets.DROPLET_USERNAME }}
        key: ${{ secrets.DROPLET_SSH_KEY }}
        port: ${{ secrets.DROPLET_PORT || 22 }}
        script: |
          # Debug: Show current directory and available directories
          echo "Current directory: $(pwd)"
          echo "Available directories in /root:"
          ls -la /root/ || echo "Cannot access /root"
          echo "Available directories in /home:"
          ls -la /home/ || echo "Cannot access /home"
          
          # Find and navigate to project directory
          if [ -d "/root/royalprompts-main" ]; then
            echo "‚úÖ Found project in /root/royalprompts-main"
            cd /root/royalprompts-main
          elif [ -d "/home/royalprompts/royalprompts-main" ]; then
            echo "‚úÖ Found project in /home/royalprompts/royalprompts-main"
            cd /home/royalprompts/royalprompts-main
          elif [ -d "/root" ]; then
            echo "‚úÖ Found /root directory, cloning repository..."
            cd /root
            # Clone the repository if it doesn't exist
            if [ ! -d "royalprompts-main" ]; then
              git clone https://github.com/${{ github.repository }}.git royalprompts-main
            fi
            cd royalprompts-main
          else
            echo "‚ùå Could not find project directory"
            exit 1
          fi
          
          echo "‚úÖ Working directory: $(pwd)"
          
          # Pull latest changes
          git pull origin main
          
          # Stop existing backend container
          docker-compose -f docker-compose.production.yml stop backend || true
          
          # Rebuild and start backend service
          docker-compose -f docker-compose.production.yml up --build -d backend
          
          # Wait for backend to be healthy
          echo "Waiting for backend to be healthy..."
          for i in {1..30}; do
            if curl -f http://localhost:8000/health > /dev/null 2>&1; then
              echo "‚úÖ Backend is healthy!"
              break
            fi
            echo "Attempt $i: Backend not ready yet..."
            sleep 10
          done
          
          # Show deployment status
          docker-compose -f docker-compose.production.yml ps
          docker-compose -f docker-compose.production.yml logs --tail=20 backend

    - name: üîç Verify deployment
      uses: appleboy/ssh-action@v1.0.0
      with:
        host: ${{ secrets.DROPLET_HOST }}
        username: ${{ secrets.DROPLET_USERNAME }}
        key: ${{ secrets.DROPLET_SSH_KEY }}
        port: ${{ secrets.DROPLET_PORT || 22 }}
        script: |
          # Navigate to project directory
          if [ -d "/root/royalprompts-main" ]; then
            cd /root/royalprompts-main
          elif [ -d "/home/royalprompts/royalprompts-main" ]; then
            cd /home/royalprompts/royalprompts-main
          else
            echo "‚ùå Could not find project directory for verification"
            exit 1
          fi
          
          # Test backend health endpoint
          curl -f http://localhost:8000/health || exit 1
          echo "‚úÖ Backend deployment verified!"
          
          # Show recent logs
          docker-compose -f docker-compose.production.yml logs --tail=10 backend

    - name: üì¢ Deployment Status
      run: |
        echo "üéâ Backend deployed successfully!"
        echo "üîó API: http://${{ secrets.DROPLET_HOST }}/api"
        echo "üè• Health: http://${{ secrets.DROPLET_HOST }}/api/health"
