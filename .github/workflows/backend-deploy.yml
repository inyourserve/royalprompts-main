# name: 🚀 Backend Simple Deploy

# on:
#   push:
#     branches: [ main ]
#     paths:
#       - 'backend/**'
#       - '.github/workflows/backend-deploy.yml'
#   workflow_dispatch:

# jobs:
#   # Deploy to DigitalOcean
#   deploy:
#     runs-on: ubuntu-latest
#     if: github.ref == 'refs/heads/main'
    
#     steps:
#     - name: 📥 Checkout code
#       uses: actions/checkout@v4

#     - name: 🚀 Deploy to DigitalOcean
#       uses: appleboy/ssh-action@v1.0.0
#       with:
#         host: ${{ secrets.DROPLET_HOST }}
#         username: ${{ secrets.DROPLET_USERNAME }}
#         key: ${{ secrets.DROPLET_SSH_KEY }}
#         port: ${{ secrets.DROPLET_PORT || 22 }}
#         script: |
#           # Create project directory
#           mkdir -p /root/royalprompts-main
#           cd /root/royalprompts-main
          
#           # Stop existing backend container
#           docker-compose -f docker-compose.production.yml stop backend || true
#           docker rm -f royalprompts-backend || true
          
#           echo "✅ Backend deployment completed!"

#     - name: 📤 Copy backend files
#       uses: appleboy/scp-action@v0.1.4
#       with:
#         host: ${{ secrets.DROPLET_HOST }}
#         username: ${{ secrets.DROPLET_USERNAME }}
#         key: ${{ secrets.DROPLET_SSH_KEY }}
#         port: ${{ secrets.DROPLET_PORT || 22 }}
#         source: "backend/"
#         target: "/root/royalprompts-main/backend/"
#         strip_components: 1

#     - name: 📤 Copy docker-compose file
#       uses: appleboy/scp-action@v0.1.4
#       with:
#         host: ${{ secrets.DROPLET_HOST }}
#         username: ${{ secrets.DROPLET_USERNAME }}
#         key: ${{ secrets.DROPLET_SSH_KEY }}
#         port: ${{ secrets.DROPLET_PORT || 22 }}
#         source: "docker-compose.production.yml"
#         target: "/root/royalprompts-main/"

#     - name: 🚀 Start backend
#       uses: appleboy/ssh-action@v1.0.0
#       with:
#         host: ${{ secrets.DROPLET_HOST }}
#         username: ${{ secrets.DROPLET_USERNAME }}
#         key: ${{ secrets.DROPLET_SSH_KEY }}
#         port: ${{ secrets.DROPLET_PORT || 22 }}
#         script: |
#           cd /root/royalprompts-main
          
#           # Create .env file with hardcoded MongoDB connection
#           cat > .env << EOF
#           MONGODB_URL=mongodb+srv://royalprompts_db_user:3ieah9FIEj7EDk7a@royalprompts.dypfief.mongodb.net/royalprompts?retryWrites=true&w=majority
#           SECRET_KEY=royalprompts-super-secret-production-key-2024-secure-random-string
#           FRONTEND_URL=http://${{ secrets.DROPLET_HOST }}
#           NEXT_PUBLIC_API_URL=http://${{ secrets.DROPLET_HOST }}/api
#           CORS_ORIGINS=["http://${{ secrets.DROPLET_HOST }}", "https://${{ secrets.DROPLET_HOST }}"]
#           EOF
          
#           # Build and start backend
#           docker-compose -f docker-compose.production.yml up --build -d backend
          
#           # Wait for backend to be healthy
#           echo "Waiting for backend to be healthy..."
#           for i in {1..30}; do
#             if curl -f http://localhost:8000/health > /dev/null 2>&1; then
#               echo "✅ Backend is healthy!"
#               break
#             fi
#             echo "Attempt $i: Backend not ready yet..."
#             sleep 10
#           done
          
#           # Show deployment status
#           docker-compose -f docker-compose.production.yml ps
#           docker-compose -f docker-compose.production.yml logs --tail=20 backend

#     - name: 🔍 Verify deployment
#       uses: appleboy/ssh-action@v1.0.0
#       with:
#         host: ${{ secrets.DROPLET_HOST }}
#         username: ${{ secrets.DROPLET_USERNAME }}
#         key: ${{ secrets.DROPLET_SSH_KEY }}
#         port: ${{ secrets.DROPLET_PORT || 22 }}
#         script: |
#           # Test backend health endpoint
#           curl -f http://localhost:8000/health || exit 1
#           echo "✅ Backend deployment verified!"

#     - name: 📢 Deployment Status
#       run: |
#         echo "🎉 Backend deployed successfully!"
#         echo "🔗 API: http://${{ secrets.DROPLET_HOST }}/api"
#         echo "🏥 Health: http://${{ secrets.DROPLET_HOST }}/api/health"

name: 🚀 Backend Simple Deploy

on:
  push:
    branches: [ main ]
    paths:
      - 'backend/**'
      - '.github/workflows/backend-deploy.yml'
      - 'docker-compose.production.yml'
  workflow_dispatch:

jobs:
  # Deploy to DigitalOcean
  deploy:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4

    - name: 🚀 Deploy to DigitalOcean
      uses: appleboy/ssh-action@v1.0.0
      with:
        host: ${{ secrets.DROPLET_HOST }}
        username: ${{ secrets.DROPLET_USERNAME }}
        key: ${{ secrets.DROPLET_SSH_KEY }}
        port: ${{ secrets.DROPLET_PORT || 22 }}
        script: |
          # Create project directory
          mkdir -p /root/royalprompts-main
          cd /root/royalprompts-main
          
          # Stop existing containers
          docker-compose -f docker-compose.production.yml down || true
          docker system prune -f
          
          echo "✅ Stopped existing containers!"

    - name: 📤 Copy backend files
      uses: appleboy/scp-action@v0.1.4
      with:
        host: ${{ secrets.DROPLET_HOST }}
        username: ${{ secrets.DROPLET_USERNAME }}
        key: ${{ secrets.DROPLET_SSH_KEY }}
        port: ${{ secrets.DROPLET_PORT || 22 }}
        source: "backend/"
        target: "/root/royalprompts-main/"
        strip_components: 0

    - name: 📤 Copy docker-compose file
      uses: appleboy/scp-action@v0.1.4
      with:
        host: ${{ secrets.DROPLET_HOST }}
        username: ${{ secrets.DROPLET_USERNAME }}
        key: ${{ secrets.DROPLET_SSH_KEY }}
        port: ${{ secrets.DROPLET_PORT || 22 }}
        source: "docker-compose.production.yml"
        target: "/root/royalprompts-main/"

    - name: 🚀 Start backend
      uses: appleboy/ssh-action@v1.0.0
      with:
        host: ${{ secrets.DROPLET_HOST }}
        username: ${{ secrets.DROPLET_USERNAME }}
        key: ${{ secrets.DROPLET_SSH_KEY }}
        port: ${{ secrets.DROPLET_PORT || 22 }}
        script: |
          cd /root/royalprompts-main
          
          # Create .env file with consistent configuration
          cat > .env << EOF
          MONGODB_URL=mongodb+srv://royalprompts_db_user:3ieah9FIEj7EDk7a@royalprompts.dypfief.mongodb.net/royalprompts?retryWrites=true&w=majority
          SECRET_KEY=royalprompts-super-secret-production-key-2024-secure-random-string
          FRONTEND_URL=http://${{ secrets.DROPLET_HOST }}:3000
          NEXT_PUBLIC_API_URL=http://${{ secrets.DROPLET_HOST }}:8000
          CORS_ORIGINS=http://${{ secrets.DROPLET_HOST }}:3000,http://${{ secrets.DROPLET_HOST }}:8000,http://${{ secrets.DROPLET_HOST }}
          EOF
          
          # Build and start backend only
          docker-compose -f docker-compose.production.yml up --build -d backend
          
          # Wait for backend to be healthy
          echo "Waiting for backend to be healthy..."
          for i in {1..30}; do
            if curl -f http://localhost:8000/health > /dev/null 2>&1; then
              echo "✅ Backend is healthy after $i attempts!"
              break
            fi
            echo "Attempt $i: Backend not ready yet..."
            sleep 10
          done
          
          # Show deployment status
          echo "=== Container Status ==="
          docker ps
          echo "=== Backend Logs ==="
          docker logs --tail=30 royalprompts_backend

    - name: 🔍 Verify deployment
      uses: appleboy/ssh-action@v1.0.0
      with:
        host: ${{ secrets.DROPLET_HOST }}
        username: ${{ secrets.DROPLET_USERNAME }}
        key: ${{ secrets.DROPLET_SSH_KEY }}
        port: ${{ secrets.DROPLET_PORT || 22 }}
        script: |
          # Test backend health endpoint
          if curl -f http://localhost:8000/health > /dev/null 2>&1; then
            echo "✅ Backend deployment verified!"
            echo "🔗 API accessible at: http://${{ secrets.DROPLET_HOST }}:8000"
            echo "🏥 Health check: http://${{ secrets.DROPLET_HOST }}:8000/health"
            echo "📚 API docs: http://${{ secrets.DROPLET_HOST }}:8000/docs"
          else
            echo "❌ Backend health check failed!"
            echo "=== Debug Info ==="
            docker ps
            docker logs --tail=50 royalprompts_backend
            exit 1
          fi

    - name: 📢 Deployment Status
      run: |
        echo "🎉 Backend deployed successfully!"
        echo "🔗 API: http://${{ secrets.DROPLET_HOST }}:8000"
        echo "🏥 Health: http://${{ secrets.DROPLET_HOST }}:8000/health"
        echo "📚 Docs: http://${{ secrets.DROPLET_HOST }}:8000/docs"
        