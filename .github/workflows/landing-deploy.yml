name: 🚀 Deploy Landing Page

on:
  push:
    branches: [ main ]
    paths:
      - 'landing/**'
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: royalprompts/landing

jobs:
  # Build and deploy
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4

    - name: 📦 Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: landing/package-lock.json

    - name: 📦 Install dependencies
      working-directory: ./landing
      run: npm ci

    - name: 🔨 Build application
      working-directory: ./landing
      run: npm run build

    - name: 🐳 Build Docker image
      run: |
        cd landing
        docker build -t ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.sha }} .
        docker build -t ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest .

    - name: 🔐 Login to Container Registry
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: 📤 Push Docker image
      run: |
        docker push ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.sha }}
        docker push ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest

    - name: 🔐 Setup SSH
      uses: webfactory/ssh-agent@v0.8.0
      with:
        ssh-private-key: ${{ secrets.DROPLET_SSH_KEY }}

    - name: 🚀 Deploy to server
      run: |
        ssh -o StrictHostKeyChecking=no ${{ secrets.DROPLET_USERNAME }}@${{ secrets.DROPLET_HOST }} << 'EOF'
          set -e
          
          print_status() { echo -e "\033[0;34m[INFO]\033[0m $1"; }
          print_success() { echo -e "\033[0;32m[SUCCESS]\033[0m $1"; }
          print_error() { echo -e "\033[0;31m[ERROR]\033[0m $1"; }
          
          print_status "🚀 Starting landing page deployment..."
          
          # Navigate to project directory
          cd /root/royalprompts-main
          
          # Pull latest changes
          print_status "📥 Pulling latest changes..."
          git pull origin main
          
          # Login to GitHub Container Registry
          print_status "🔐 Logging in to container registry..."
          echo ${{ secrets.GITHUB_TOKEN }} | docker login ghcr.io -u ${{ github.actor }} --password-stdin
          
          # Pull latest landing image
          print_status "📥 Pulling latest landing image..."
          docker pull ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.sha }}
          
          # Stop existing container
          print_status "🛑 Stopping existing container..."
          docker stop royalprompts_landing 2>/dev/null || true
          docker rm royalprompts_landing 2>/dev/null || true
          
          # Run new container
          print_status "🚀 Starting new container..."
          docker run -d \
            --name royalprompts_landing \
            --restart unless-stopped \
            -p 4321:80 \
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.sha }}
          
          # Wait for health check
          print_status "⏳ Waiting for landing page to be healthy..."
          for i in {1..30}; do
            if curl -f http://localhost:4321/health > /dev/null 2>&1; then
              print_success "✅ Landing page is healthy!"
              break
            fi
            print_status "Attempt $i: Landing page not ready yet..."
            sleep 5
          done
          
          # Final health check
          if curl -f http://localhost:4321/health > /dev/null 2>&1; then
            print_success "🎉 Landing page deployed successfully!"
            print_success "🌐 Landing page: http://localhost:4321"
            print_success "🏥 Health check: http://localhost:4321/health"
          else
            print_error "❌ Deployment failed! Landing page is not responding."
            exit 1
          fi
        EOF
